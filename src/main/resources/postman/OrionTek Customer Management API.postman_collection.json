{
	"info": {
		"_postman_id": "79f58501-6d3d-4b14-a58d-983ab0d08976",
		"name": "OrionTek Customer Management API",
		"description": "Colección completa de endpoints para el sistema de gestión de clientes OrionTek. Incluye autenticación JWT, gestión de usuarios y clientes con tests automatizados.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39210000"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login SUPERADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login exitoso\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"pm.test(\"Token JWT presente\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.token).to.exist;",
									"    pm.expect(jsonData.data.type).to.eql(\"Bearer\");",
									"});",
									"",
									"pm.test(\"Usuario es SUPERADMIN\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.user.role).to.eql(\"SUPERADMIN\");",
									"});",
									"",
									"// Guardar token para uso posterior",
									"if (pm.response.code === 200) {",
									"    var responseData = pm.response.json();",
									"    pm.environment.set(\"superadmin_token\", responseData.data.token);",
									"    pm.environment.set(\"superadmin_id\", responseData.data.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{superadmin_email}}\",\n  \"password\": \"{{superadmin_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login exitoso\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"pm.test(\"Usuario es ADMIN\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.user.role).to.eql(\"ADMIN\");",
									"});",
									"",
									"// Guardar token para uso posterior",
									"if (pm.response.code === 200) {",
									"    var responseData = pm.response.json();",
									"    pm.environment.set(\"admin_token\", responseData.data.token);",
									"    pm.environment.set(\"admin_id\", responseData.data.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login fallido\", function () {",
									"    pm.response.to.have.status(401);",
									"    pm.expect(pm.response.json().success).to.be.false;",
									"});",
									"",
									"pm.test(\"Error de credenciales\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorCode).to.eql(\"AUTH_INVALID_CREDENTIALS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"invalid@test.com\",\n  \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validar Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Token válido\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"pm.test(\"Información de usuario presente\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.id).to.exist;",
									"    pm.expect(jsonData.data.email).to.exist;",
									"    pm.expect(jsonData.data.role).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/validate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"validate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Usuario Actual",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Información obtenida\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Datos del usuario presentes\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.email).to.exist;",
									"    pm.expect(jsonData.data.firstName).to.exist;",
									"    pm.expect(jsonData.data.lastName).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logout exitoso\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management (SUPERADMIN Only)",
			"item": [
				{
					"name": "Crear Usuario ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuario creado exitosamente\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"pm.test(\"Datos del usuario correctos\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.role).to.eql(\"ADMIN\");",
									"    pm.expect(jsonData.data.active).to.be.true;",
									"    pm.expect(jsonData.data.email).to.include(\"@\");",
									"});",
									"",
									"// Guardar ID del usuario creado",
									"if (pm.response.code === 201) {",
									"    var responseData = pm.response.json();",
									"    pm.environment.set(\"created_user_id\", responseData.data.id);",
									"    pm.environment.set(\"created_user_email\", responseData.data.email);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test.admin@oriontek.com\",\n  \"password\": \"TestAdmin123!\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"Admin\",\n  \"role\": \"ADMIN\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Todos los Usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lista obtenida exitosamente\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"pm.test(\"Formato de paginación correcto\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.content).to.be.an('array');",
									"    pm.expect(jsonData.data.totalElements).to.be.a('number');",
									"    pm.expect(jsonData.data.size).to.be.a('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users?page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener Usuario por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuario obtenido exitosamente\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Datos completos del usuario\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.id).to.exist;",
									"    pm.expect(jsonData.data.email).to.exist;",
									"    pm.expect(jsonData.data.fullName).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/{{created_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"{{created_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuario actualizado exitosamente\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cambios aplicados\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.firstName).to.eql(\"Test Updated\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Test Updated\",\n  \"lastName\": \"Admin Updated\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/users/{{created_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"{{created_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar Usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Búsqueda exitosa\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Resultados de búsqueda\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/search?term=test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Estadísticas de Usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estadísticas obtenidas\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Datos estadísticos correctos\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.totalUsers).to.be.a('number');",
									"    pm.expect(jsonData.data.activeUsers).to.be.a('number');",
									"    pm.expect(jsonData.data.superAdmins).to.be.a('number');",
									"    pm.expect(jsonData.data.admins).to.be.a('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/statistics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"statistics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Admins Activos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lista de admins obtenida\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Solo usuarios ADMIN activos\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.data.forEach(function(user) {",
									"        pm.expect(user.role).to.eql(\"ADMIN\");",
									"        pm.expect(user.active).to.be.true;",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/admins",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"admins"
							]
						}
					},
					"response": []
				},
				{
					"name": "Desactivar Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuario desactivado exitosamente\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/{{created_user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"{{created_user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activar Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Usuario activado exitosamente\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/{{created_user_id}}/activate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"{{created_user_id}}",
								"activate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer Management",
			"item": [
				{
					"name": "Crear Cliente (ADMIN)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cliente creado exitosamente\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"pm.test(\"Datos del cliente correctos\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.email).to.exist;",
									"    pm.expect(jsonData.data.addresses).to.be.an('array');",
									"    pm.expect(jsonData.data.addresses.length).to.be.greaterThan(0);",
									"});",
									"",
									"// Guardar ID del cliente creado",
									"if (pm.response.code === 201) {",
									"    var responseData = pm.response.json();",
									"    pm.environment.set(\"created_customer_id\", responseData.data.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"María\",\n  \"lastName\": \"González\",\n  \"email\": \"maria.gonzalez@email.com\",\n  \"phone\": \"+1-809-555-1234\",\n  \"documentNumber\": \"001-1234567-8\",\n  \"documentType\": \"CEDULA\",\n  \"notes\": \"Cliente VIP - Preferencia por llamadas matutinas\",\n  \"addresses\": [\n    {\n      \"street\": \"Av. Winston Churchill #25, Torre Empresarial, Piso 5\",\n      \"city\": \"Santo Domingo\",\n      \"state\": \"Distrito Nacional\",\n      \"zipCode\": \"10101\",\n      \"country\": \"República Dominicana\",\n      \"type\": \"HOME\",\n      \"isPrimary\": true,\n      \"notes\": \"Portón azul, timbre #2\"\n    },\n    {\n      \"street\": \"Calle El Conde #123\",\n      \"city\": \"Santo Domingo\",\n      \"state\": \"Distrito Nacional\",\n      \"zipCode\": \"10102\",\n      \"country\": \"República Dominicana\",\n      \"type\": \"WORK\",\n      \"isPrimary\": false,\n      \"notes\": \"Oficina principal\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Cliente (SUPERADMIN)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cliente creado exitosamente por SUPERADMIN\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"// Guardar ID del cliente creado por SUPERADMIN",
									"if (pm.response.code === 201) {",
									"    var responseData = pm.response.json();",
									"    pm.environment.set(\"superadmin_customer_id\", responseData.data.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Carlos\",\n  \"lastName\": \"Pérez\",\n  \"email\": \"carlos.perez@empresa.com\",\n  \"phone\": \"+1-809-555-9876\",\n  \"documentNumber\": \"001-9876543-2\",\n  \"documentType\": \"CEDULA\",\n  \"notes\": \"Cliente empresarial\",\n  \"addresses\": [\n    {\n      \"street\": \"Av. 27 de Febrero #456\",\n      \"city\": \"Santo Domingo\",\n      \"state\": \"Distrito Nacional\",\n      \"zipCode\": \"10103\",\n      \"country\": \"República Dominicana\",\n      \"type\": \"BILLING\",\n      \"isPrimary\": true\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Clientes (ADMIN)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lista de clientes obtenida (ADMIN)\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"pm.test(\"Formato de paginación correcto\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.content).to.be.an('array');",
									"    pm.expect(jsonData.data.totalElements).to.be.a('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers?page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Clientes (SUPERADMIN)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lista completa de clientes (SUPERADMIN)\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().success).to.be.true;",
									"});",
									"",
									"pm.test(\"SUPERADMIN ve todos los clientes\", function () {",
									"    var jsonData = pm.response.json();",
									"    // SUPERADMIN debería ver más clientes que ADMIN",
									"    pm.expect(jsonData.data.totalElements).to.be.greaterThan(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers?page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener Cliente por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cliente obtenido exitosamente\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Datos completos del cliente\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.id).to.exist;",
									"    pm.expect(jsonData.data.email).to.exist;",
									"    pm.expect(jsonData.data.addresses).to.be.an('array');",
									"    pm.expect(jsonData.data.createdBy).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/{{created_customer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"{{created_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar Clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Búsqueda de clientes exitosa\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Resultados de búsqueda\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/search?term=maría&page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"search"
							],
							"query": [
								{
									"key": "term",
									"value": "maría"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Estadísticas de Clientes (ADMIN)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estadísticas obtenidas (ADMIN)\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Datos estadísticos correctos\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.totalCustomers).to.be.a('number');",
									"    pm.expect(jsonData.data.activeCustomers).to.be.a('number');",
									"    pm.expect(jsonData.data.managedCustomers).to.be.a('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/statistics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"statistics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Estadísticas de Clientes (SUPERADMIN)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estadísticas globales obtenidas (SUPERADMIN)\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"SUPERADMIN ve estadísticas globales\", function () {",
									"    var jsonData = pm.response.json();",
									"    // SUPERADMIN debería ver totales mayores",
									"    pm.expect(jsonData.data.totalCustomers).to.be.a('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/statistics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"statistics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clientes por Usuario (SUPERADMIN Only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Clientes por usuario obtenidos\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Solo clientes del usuario especificado\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.content).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/by-user/{{admin_id}}?page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"by-user",
								"{{admin_id}}"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Desactivar Cliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cliente desactivado exitosamente\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/{{created_customer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"{{created_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activar Cliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cliente activado exitosamente\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/{{created_customer_id}}/activate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"{{created_customer_id}}",
								"activate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Security Tests",
			"item": [
				{
					"name": "Acceso sin Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Acceso denegado sin token\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Token Inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Token inválido rechazado\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid.token.here"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADMIN intentando acceder a User Management",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ADMIN no puede acceder a gestión de usuarios\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADMIN intentando ver cliente de otro ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ADMIN no puede ver clientes de otros\", function () {",
									"    // Si existe el cliente pero no es del ADMIN, debería ser 403",
									"    // Si no existe, será 404",
									"    pm.expect([403, 404]).to.include(pm.response.code);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/customers/{{superadmin_customer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers",
								"{{superadmin_customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Cliente con Email Duplicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Email duplicado rechazado\", function () {",
									"    pm.response.to.have.status(409);",
									"    pm.expect(pm.response.json().errorCode).to.eql(\"CUSTOMER_DUPLICATE_DATA\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Test\",\n  \"lastName\": \"Duplicate\",\n  \"email\": \"maria.gonzalez@email.com\",\n  \"addresses\": [\n    {\n      \"street\": \"Test Street\",\n      \"country\": \"Test Country\",\n      \"type\": \"HOME\",\n      \"isPrimary\": true\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation Tests",
			"item": [
				{
					"name": "Login con Email Inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Email inválido rechazado\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"invalid-email\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Cliente sin Direcciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cliente sin direcciones rechazado\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Test\",\n  \"lastName\": \"NoAddress\",\n  \"email\": \"test.noaddress@email.com\",\n  \"addresses\": []\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Usuario con Rol SUPERADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Rol SUPERADMIN rechazado\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test.superadmin@test.com\",\n  \"password\": \"TestPassword123!\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"SuperAdmin\",\n  \"role\": \"SUPERADMIN\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Cliente con Múltiples Direcciones Primarias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Múltiples direcciones primarias rechazadas\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Test\",\n  \"lastName\": \"MultiplePrimary\",\n  \"email\": \"test.multiple@email.com\",\n  \"addresses\": [\n    {\n      \"street\": \"Address 1\",\n      \"country\": \"Country 1\",\n      \"type\": \"HOME\",\n      \"isPrimary\": true\n    },\n    {\n      \"street\": \"Address 2\",\n      \"country\": \"Country 2\",\n      \"type\": \"WORK\",\n      \"isPrimary\": true\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"customers"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Script que se ejecuta antes de cada request",
					"// Útil para configuraciones globales o logging",
					"console.log('Ejecutando request: ' + pm.info.requestName);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Tests globales que se ejecutan después de cada request",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has valid JSON', function () {",
					"    pm.response.to.have.jsonBody();",
					"});",
					"",
					"// Log de respuestas con errores",
					"if (pm.response.code >= 400) {",
					"    console.log('Error Response:', pm.response.json());",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "superadmin_email",
			"value": "superadmin@oriontek.com",
			"type": "string"
		},
		{
			"key": "superadmin_password",
			"value": "SuperAdmin123!",
			"type": "string"
		},
		{
			"key": "admin_email",
			"value": "admin@oriontek.com",
			"type": "string"
		},
		{
			"key": "admin_password",
			"value": "Admin123!",
			"type": "string"
		}
	]
}